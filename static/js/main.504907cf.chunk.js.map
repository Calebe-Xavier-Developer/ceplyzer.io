{"version":3,"sources":["reportWebVitals.ts","api/api.ts","api/getAddressService/index.ts","components/SearchBar/style.ts","components/SearchBar/index.tsx","pages/SearchPage/style.tsx","pages/SearchPage/index.tsx","styles/global.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","api","axios","create","baseURL","getAddressData","cep","a","result","get","NavSearchBar","styled","div","DivInputs","LabelInput","label","InputSearch","input","Paragraph","p","props","isDisplay","SearchBar","useState","inputCepWritten","setInputCepWritten","setIsDisplay","addressData","setAddressData","searchAddress","e","key","match","parseInt","data","alert","type","placeholder","maxLength","value","onChange","undefined","currentTarget","changeInputCep","onKeyPress","city","state","neighborhood","street","ContainerAddress","SearchPage","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sCCHCQ,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,kCCDEC,EAAc,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACtBC,EAASP,EAAIQ,IAAJ,iBAAkBH,IADL,kBAErBE,GAFqB,2CAAH,sD,cCIdE,EAAeC,IAAOC,IAAV,6SAcZC,EAAYF,IAAOC,IAAV,iQAgBTE,EAAaH,IAAOI,MAAV,6HAQVC,EAAcL,IAAOM,MAAV,ySAmBXC,EAAYP,IAAOQ,EAAV,wEACT,SAAAC,GAAK,OAAKA,EAAMC,UAAY,OAAS,U,OCiBnCC,EA1Da,WAC1B,MAA8CC,mBAAS,IAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOF,EAAP,KAAkBK,EAAlB,KACA,EAAsCH,qBAAtC,mBAAOI,EAAP,KAAoBC,EAApB,KAQMC,EAAa,uCAAG,WAAOC,GAAP,eAAAvB,EAAA,yDACN,UAAVuB,EAAEC,IADc,oBAEOP,EAAgBQ,MAAM,SAF7B,0CAKwB3B,EAAe4B,SAAST,IALhD,cAKRhB,EALQ,OAMdoB,EAAepB,EAAO0B,MAClB1B,IACFkB,GAAa,GACbD,EAAmB,KATP,kBAWPjB,GAXO,yCAadkB,GAAa,GACbD,EAAmB,IAdL,wDAkBhBU,MAAM,yBAlBU,0DAAH,sDAuBnB,OACE,eAACzB,EAAD,+CAEE,eAACG,EAAD,WACE,cAACG,EAAD,CACEoB,KAAK,OACLC,YAAY,iBACZC,UAAW,EACXC,MAAOf,EACPgB,SAAU,SAAAV,GAAC,OAtCI,SAACA,GACtBJ,GAAa,GACbE,OAAea,GACfhB,EAAmBK,EAAEY,cAAcH,OAmCdI,CAAeb,IAC9Bc,WAAY,SAAAd,GAAC,OAAID,EAAcC,MAEjC,eAACZ,EAAD,CAAWG,UAAWA,EAAtB,UACG,cAACP,EAAD,+BACAa,EAAW,iBACPA,QADO,IACPA,OADO,EACPA,EAAakB,KADN,oBACelB,QADf,IACeA,OADf,EACeA,EAAamB,MAD5B,oBACsCnB,QADtC,IACsCA,OADtC,EACsCA,EAAaoB,aADnD,oBACoEpB,QADpE,IACoEA,OADpE,EACoEA,EAAaqB,OADjF,0BACkGrB,QADlG,IACkGA,OADlG,EACkGA,EAAarB,KACvH,sCCvED2C,EAAmBtC,IAAOC,IAAV,8QCEhBsC,EAAa,WACxB,OACE,cAACD,EAAD,UACE,cAAC,EAAD,OCLSE,cAAf,ycCIAC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAG1BhE,M","file":"static/js/main.504907cf.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://brasilapi.com.br/api/',\n});\n\nexport default api;","import api from '../api';\n\nexport const getAddressData = async (cep: number) => {\n  const result = api.get(`cep/v2/${cep}`);\n  return result;\n};","import styled from \"styled-components\";\n\ninterface Props {\n  isDisplay: boolean,\n};\n\nexport const NavSearchBar = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 80%;\n  height: auto;\n  border-radius: 15px;\n  padding: 15px;\n  background: linear-gradient(21deg, #72ffc5, #72e5ff, #ff72fb);\n  font-size: 20px;\n  color: #fff;\n`;\n\nexport const DivInputs = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  height: auto;\n  font-size: 20px;\n  color: #fff;\n\n  p{\n    padding-top: 18px;\n    height: 100%;\n  }\n`;\n\nexport const LabelInput = styled.label`\n  width: 100%;\n  text-align: left;\n  font-size: 12px;\n  font-weight: normal;\n  color: #fff;\n`;\n\nexport const InputSearch = styled.input`\n  width: 50%;\n  border: none;\n  padding: 5px;\n  margin-top: 10px;\n  border-radius: 4px;\n  outline: none;\n  font-size: 12px;\n  \n\n  &:focus{\n    border: 1px solid blue;\n  }\n\n  &[type=number]::-webkit-inner-spin-button { \n    -webkit-appearance: none;\n  }\n`;\n\nexport const Paragraph = styled.p<Props>`\n  display: ${props => (props.isDisplay ? 'flex' : 'none')};\n  flex-direction: column;\n`;\n","import React, { useState } from 'react';\nimport { getAddressData } from '../../api/getAddressService';\n\nimport { DivInputs, InputSearch, LabelInput, NavSearchBar, Paragraph } from './style';\n\ninterface adressState {\n  city: string,\n  state: string,\n  cep: string,\n  neighborhood: string,\n  street: string,\n};\n\ninterface requestFriendly {\n  data: {\n    city: string,\n    state: string,\n    cep: string,\n    neighborhood: string,\n    street: string,\n  },\n};\n\nconst SearchBar: React.FC = () => {\n  const [inputCepWritten, setInputCepWritten] = useState('');\n  const [isDisplay, setIsDisplay] = useState(false);\n  const [addressData, setAddressData] = useState<adressState>();\n\n  const changeInputCep = (e: any) => {\n    setIsDisplay(false);\n    setAddressData(undefined);\n    setInputCepWritten(e.currentTarget.value);\n  };\n\n  const searchAddress = async (e: any) => {\n    if (e.key === 'Enter') {\n      const verifyOnlyNumber = inputCepWritten.match(/\\D/gim);\n      if (!verifyOnlyNumber) {\n        try {\n          const result: requestFriendly = await getAddressData(parseInt(inputCepWritten));\n          setAddressData(result.data);\n          if (result) {\n            setIsDisplay(true);\n            setInputCepWritten('');\n          };\n          return result;\n        } catch (error) {\n          setIsDisplay(true);\n          setInputCepWritten('');\n          return error;\n        }\n      } else {\n        alert('Digite apenas numeros');\n      }\n    }\n  };\n\n  return (\n    <NavSearchBar>\n      Descubra seu endereço pelo cep\n      <DivInputs>\n        <InputSearch\n          type=\"text\"\n          placeholder=\"Digite seu CEP\"\n          maxLength={8}\n          value={inputCepWritten}\n          onChange={e => changeInputCep(e)}\n          onKeyPress={e => searchAddress(e)}\n        />\n        <Paragraph isDisplay={isDisplay}>\n           <LabelInput>Seu endereço:</LabelInput>\n          {addressData ?\n            `${addressData?.city}, ${addressData?.state}, ${addressData?.neighborhood}, ${addressData?.street} - CEP: ${addressData?.cep}`\n            : 'O seu cep está errado!'\n          }\n        </Paragraph>\n      </DivInputs>\n    </NavSearchBar>\n  )\n}\n\nexport default SearchBar;\n","import styled from 'styled-components';\n\nexport const ContainerAddress = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n\n  width: 90vw;\n  height: 90vh;\n\n  background-color: #fff;\n  box-shadow: 0px 0px 37px -11px rgba(0,0,0,0.46);\n  border-radius: 8px;\n`;","import React from 'react';\nimport SearchBar from '../../components/SearchBar';\nimport { ContainerAddress } from './style';\n\nexport const SearchPage = () => {\n  return (\n    <ContainerAddress>\n      <SearchBar />\n    </ContainerAddress>\n  )\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100vw;\n    height: 100vh;\n\n    background: linear-gradient(45deg, #3de2e2, white, #d82bad);\n    font-size: 20px;\n    color: #333;\n\n    font-family: sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { SearchPage } from './pages/SearchPage';\nimport GlobalStyle from './styles/global';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <SearchPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}