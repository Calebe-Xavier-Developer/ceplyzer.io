{"version":3,"sources":["reportWebVitals.ts","api/api.ts","components/SearchBar/style.ts","components/SearchBar/index.tsx","api/getAddressService/index.ts","pages/SearchPage/style.tsx","pages/SearchPage/index.tsx","styles/global.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","api","axios","create","baseURL","NavSearchBar","styled","div","DivInputs","LabelInput","label","InputSearch","input","Paragraph","p","props","isDisplay","SearchBar","inputCepWritten","setInputCepWritten","useState","setIsDisplay","addressData","setAddressData","searchAddress","async","key","match","alert","result","get","cep","getAddressData","parseInt","data","error","React","createElement","type","placeholder","maxLength","value","onChange","undefined","currentTarget","changeInputCep","onKeyPress","city","state","neighborhood","street","ContainerAddress","SearchPage","createGlobalStyle","ReactDOM","render","StrictMode","GlobalStyle","document","getElementById"],"mappings":"yKAceA,MAZUC,IACnBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,cCHCY,aAJHC,EAAMC,OAAO,CACvBC,QAAS,6CCGJ,MAAMC,EAAeC,IAAOC;;;;;;;;;;;;;EAetBC,EAAYF,IAAOC;;;;;;;;;;;;;;EAgBnBE,EAAaH,IAAOI;;;;;;EAQpBC,EAAcL,IAAOM;;;;;;;;;;;;;;;;;;EAoBrBC,EAAYP,IAAOQ;aACnBC,GAAUA,EAAMC,UAAY,OAAS;;ECenCC,MA1DaA,KAC1B,MAAOC,EAAiBC,GAAsBC,mBAAS,KAChDJ,EAAWK,GAAgBD,oBAAS,IACpCE,EAAaC,GAAkBH,qBAQhCI,EAAgBC,UACpB,GAAc,UAAVjC,EAAEkC,IAEJ,GADyBR,EAAgBS,MAAM,SAgB7CC,MAAM,8BAdN,IACE,MAAMC,OCrCcJ,UACbxB,EAAI6B,cAAcC,KDoCaC,CAAeC,SAASf,IAM9D,OALAK,EAAeM,EAAOK,MAClBL,IACFR,GAAa,GACbF,EAAmB,KAEdU,EACP,MAAOM,GAGP,OAFAd,GAAa,GACbF,EAAmB,IACZgB,IAQf,OACEC,IAAAC,cAAChC,EAAY,KAAC,oCAEZ+B,IAAAC,cAAC7B,EAAS,KACR4B,IAAAC,cAAC1B,EAAW,CACV2B,KAAK,OACLC,YAAY,iBACZC,UAAW,EACXC,MAAOvB,EACPwB,SAAUlD,GAtCMA,KACtB6B,GAAa,GACbE,OAAeoB,GACfxB,EAAmB3B,EAAEoD,cAAcH,QAmCdI,CAAerD,GAC9BsD,WAAYtD,GAAKgC,EAAchC,KAEjC4C,IAAAC,cAACxB,EAAS,CAACG,UAAWA,GACnBoB,IAAAC,cAAC5B,EAAU,KAAC,oBACZa,KACe,OAAXA,QAAW,IAAXA,OAAW,EAAXA,EAAayB,SAAoB,OAAXzB,QAAW,IAAXA,OAAW,EAAXA,EAAa0B,UAAqB,OAAX1B,QAAW,IAAXA,OAAW,EAAXA,EAAa2B,iBAA4B,OAAX3B,QAAW,IAAXA,OAAW,EAAXA,EAAa4B,iBAA4B,OAAX5B,QAAW,IAAXA,OAAW,EAAXA,EAAaS,MACvH,gCEvEP,MAAMoB,EAAmB7C,IAAOC;;;;;;ECE1B6C,EAAaA,IAEtBhB,IAAAC,cAACc,EAAgB,KACff,IAAAC,cAACpB,EAAS,OCLDoC;;;;;;;;;;;;;;;;;;;;;ECIfC,IAASC,OACPnB,IAAAC,cAACD,IAAMoB,WAAU,KACfpB,IAAAC,cAACoB,EAAW,MACZrB,IAAAC,cAACe,EAAU,OAEbM,SAASC,eAAe,SAG1BvE","file":"static/js/main.cce449de.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://brasilapi.com.br/api/',\r\n});\r\n\r\nexport default api;","import styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  isDisplay: boolean,\r\n};\r\n\r\nexport const NavSearchBar = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 80%;\r\n  min-height: 150px;\r\n  height: auto;\r\n  border-radius: 15px;\r\n  padding: 15px;\r\n  background: linear-gradient(21deg, #00db82, #12d4ff, #f302eb);\r\n  font-size: 20px;\r\n  color: #000000;\r\n`;\r\n\r\nexport const DivInputs = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  height: auto;\r\n  font-size: 20px;\r\n  color: #000000;\r\n\r\n  p{\r\n    padding-top: 18px;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const LabelInput = styled.label`\r\n  width: 100%;\r\n  text-align: left;\r\n  font-size: 12px;\r\n  font-weight: normal;\r\n  color: #000000;\r\n`;\r\n\r\nexport const InputSearch = styled.input`\r\n  width: 50%;\r\n  height: 40px;\r\n  border: none;\r\n  padding: 10px;\r\n  margin-top: 10px;\r\n  border-radius: 4px;\r\n  outline: none;\r\n  font-size: 16px;\r\n  \r\n\r\n  &:focus{\r\n    border: 1px solid blue;\r\n  }\r\n\r\n  &[type=number]::-webkit-inner-spin-button { \r\n    -webkit-appearance: none;\r\n  }\r\n`;\r\n\r\nexport const Paragraph = styled.p<Props>`\r\n  display: ${props => (props.isDisplay ? 'flex' : 'none')};\r\n  flex-direction: column;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { getAddressData } from '../../api/getAddressService';\r\n\r\nimport { DivInputs, InputSearch, LabelInput, NavSearchBar, Paragraph } from './style';\r\n\r\ninterface adressState {\r\n  city: string,\r\n  state: string,\r\n  cep: string,\r\n  neighborhood: string,\r\n  street: string,\r\n};\r\n\r\ninterface requestFriendly {\r\n  data: {\r\n    city: string,\r\n    state: string,\r\n    cep: string,\r\n    neighborhood: string,\r\n    street: string,\r\n  },\r\n};\r\n\r\nconst SearchBar: React.FC = () => {\r\n  const [inputCepWritten, setInputCepWritten] = useState('');\r\n  const [isDisplay, setIsDisplay] = useState(false);\r\n  const [addressData, setAddressData] = useState<adressState>();\r\n\r\n  const changeInputCep = (e: any) => {\r\n    setIsDisplay(false);\r\n    setAddressData(undefined);\r\n    setInputCepWritten(e.currentTarget.value);\r\n  };\r\n\r\n  const searchAddress = async (e: any) => {\r\n    if (e.key === 'Enter') {\r\n      const verifyOnlyNumber = inputCepWritten.match(/\\D/gim);\r\n      if (!verifyOnlyNumber) {\r\n        try {\r\n          const result: requestFriendly = await getAddressData(parseInt(inputCepWritten));\r\n          setAddressData(result.data);\r\n          if (result) {\r\n            setIsDisplay(true);\r\n            setInputCepWritten('');\r\n          };\r\n          return result;\r\n        } catch (error) {\r\n          setIsDisplay(true);\r\n          setInputCepWritten('');\r\n          return error;\r\n        }\r\n      } else {\r\n        alert('Digite apenas numeros');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <NavSearchBar>\r\n      Descubra seu endereço pelo cep\r\n      <DivInputs>\r\n        <InputSearch\r\n          type=\"text\"\r\n          placeholder=\"Digite seu CEP\"\r\n          maxLength={8}\r\n          value={inputCepWritten}\r\n          onChange={e => changeInputCep(e)}\r\n          onKeyPress={e => searchAddress(e)}\r\n        />\r\n        <Paragraph isDisplay={isDisplay}>\r\n           <LabelInput>Seu endereço:</LabelInput>\r\n          {addressData ?\r\n            `${addressData?.city}, ${addressData?.state}, ${addressData?.neighborhood}, ${addressData?.street} - CEP: ${addressData?.cep}`\r\n            : 'O seu cep está errado!'\r\n          }\r\n        </Paragraph>\r\n      </DivInputs>\r\n    </NavSearchBar>\r\n  )\r\n}\r\n\r\nexport default SearchBar;\r\n","import api from '../api';\r\n\r\nexport const getAddressData = async (cep: number) => {\r\n  const result = api.get(`cep/v2/${cep}`);\r\n  return result;\r\n};","import styled from 'styled-components';\r\n\r\nexport const ContainerAddress = styled.div`\r\n  width: 90vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n","import React from 'react';\r\nimport SearchBar from '../../components/SearchBar';\r\nimport { ContainerAddress } from './style';\r\n\r\nexport const SearchPage = () => {\r\n  return (\r\n    <ContainerAddress>\r\n      <SearchBar />\r\n    </ContainerAddress>\r\n  )\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100vw;\r\n    height: 100vh;\r\n\r\n    background: linear-gradient(180deg, #3de2e2, white, #d82bad);\r\n    font-size: 20px;\r\n\r\n    font-family: sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { SearchPage } from './pages/SearchPage';\r\nimport GlobalStyle from './styles/global';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <SearchPage />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}